#!/usr/bin/python

# Usage
# transport_file <IP> <Port> <File_Name / l>

usage_txt = '''Usage: transport_file <IP> [File_Name / -l]

upload files to another computer on the same LAN
or alternatively, download file from a computer on the same LAN

IP - Machine's IP
File_name - Specify file name to upload to another computer
l - Use this flag to download file from another computer

Flags:

v - Verbose

'''

# <Globals>

BUFFER_SIZE = 1024
END_OF_STREAM = '###END###'
PORT = 41555

# </Globals>

from sys import argv
import socket, base64

download = None
verbose = '-v' in argv

def divide(source, packet_size):
    packs = []
    for x in range(0, len(source), packet_size):
        packs.append(source[x:x + packet_size])
    return packs + [END_OF_STREAM]


def send_large_data(data, size, s):
    packs = divide(data, size)
    for x in packs:
        s.send(x)


if len(argv) < 3:
    print usage_txt
else:
    download = '-l' in argv
    if not download:
        s = socket.socket()
        s.connect((argv[1], PORT))
	if verbose:
		print 'Connection established!'

        with open(argv[2], 'rb') as f:
            byts = f.read()

        byts = base64.b64encode(argv[2]) + '@' + base64.b64encode(byts)
        send_large_data(byts, BUFFER_SIZE, s)

        s.close()
	if verbose:
		print 'File uploaded successfully!'
    else:
        s = socket.socket()
        s.bind(('', PORT))
        s.listen(1)

	if verbose:
		print 'Waiting for connection...'
        c, addr = s.accept()
	if verbose:
		print 'Connected'
        assert (addr[0] == argv[1])

        data, current = '', ''
    
        current = c.recv(BUFFER_SIZE)
        while current[len(current) - len(END_OF_STREAM):len(current)] != END_OF_STREAM:
            data += current
            current = c.recv(BUFFER_SIZE)
	data += current[0:len(current) - len(END_OF_STREAM)]
        del current

        data = data.split('@')
        name, content = base64.b64decode(data[0]), base64.b64decode(data[1])
        del data

        with open(name, 'wb+') as f:
            f.write(content)

        c.close()
        s.close()
	if verbose:
		print 'File downloaded successfully!'

